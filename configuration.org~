#+title: Emacs configuration
#+author: Nick Boyadjian

* Early init
:PROPERTIES:
:header-args:emacs-lisp: :tangle (expand-file-name "early-init.el" user-emacs-directory)
:END:

#+begin_src emacs-lisp
  ;;; early-init.el --- Early init file -*- lexical-binding: t -*-
  ;;; Commentary:
  ;;; Code:

  (setq package-enable-at-startup nil)
#+end_src
n
* Startup performance
#+begin_src emacs-lpisp
  (setq gc-cons-threshold (* 50 1000 1000))

  (defun nb/display-startup-time ()
  (message "Emacs loaded in %s with %d garbage collections."
           (format "%.2f seconds"
                   (float-time
                     (time-subtract after-init-time before-init-time)))
           gcs-done))

(add-hook 'emacs-startup-hook #'nb/display-startup-time)
#+end_src

* Basic UI tweaks
#+begin_src emacs-lisp
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
#+end_src

** UTF-8
#+begin_src emacs-lisp
  (setopt default-process-coding-system '(utf-8-unix . utf-8-unix)
        locale-coding-system 'utf-8)

  (set-charset-priority 'unicode)
  (set-terminal-coding-system 'utf-8)
  (set-keyboard-coding-system 'utf-8)
  (set-selection-coding-system 'utf-8)
  (prefer-coding-system 'utf-8)
  (set-language-environment "UTF-8")
  (set-default-coding-systems 'utf-8)
#+end_src

* Theme
#+begin_src emacs-lisp
  (use-package catppuccin-theme
    :ensure t
    :config
    (load-theme 'catppuccin))
#+end_src

* Modeline
#+begin_src emacs-lisp
  (use-package moody
    :config
    (setq x-underline-at-descent-line t)
    (moody-replace-mode-line-buffer-identification)
    (moody-replace-vc-mode)
    (moody-replace-eldoc-minibuffer-message-function))
#+end_src

* Org mode
** Org modern
#+begin_src emacs-lisp
  (use-package org-modern
  :ensure t
  :init
  ;; Add frame borders and window dividers
  ;;
  ;; WJH 2023-12-05: These are necessary in order to be able to see the
  ;; indicators for source blocks.  On the other hand, I do not want
  ;; them as large as in the examples (40 pixels!), so I am using 4
  ;; instead
  (modify-all-frames-parameters
   '((right-divider-width . 4)
     (internal-border-width . 4)))
  ;; Make things blend in
  (dolist (face '(window-divider
		  window-divider-first-pixel
		  window-divider-last-pixel))
    (face-spec-reset-face face)
    (set-face-foreground face (face-attribute 'default :background)))
  :config
  (setq
   ;; Edit settings
   org-auto-align-tags nil
   org-tags-column 0
   org-catch-invisible-edits 'show-and-error
   org-special-ctrl-a/e t
   org-insert-heading-respect-content t
   org-startup-folded t
   
   ;; Org styling
   org-hide-emphasis-markers t
   org-pretty-entities t
   org-ellipsis "…"
   org-adapt-indentation t

   ;; Agenda styling
   org-agenda-tags-column 0
   org-agenda-block-separator ?─
   org-agenda-time-grid
   '((daily today require-timed)
     (800 1000 1200 1400 1600 1800 2000)
     " ┄┄┄┄┄ " "┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄")
   org-agenda-current-time-string
   "◀── now ─────────────────────────────────────────────────")

  (global-org-modern-mode)
  )
#+end_src
* Search
** Vertico
#+begin_src emacs-lisp
(use-package vertico
  :init
  (vertico-mode)
  (setq vertico-count 20)
  (setq vertico-cycle t))

;; Persist history over Emacs restarts. Vertico sorts by history position.
(use-package savehist
  :init
  (savehist-mode))
#+end_src
*** 
* Languages
** Nix
   #+begin_src emacs-lisp
     (use-package nix-mode
       :ensure t
       :mode "\\.nix\\'")
#+end_src
